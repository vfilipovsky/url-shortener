// Code generated by MockGen. DO NOT EDIT.
// Source: ./randomizer.go

// Package mock_randomizer is a generated GoMock package.
package mock_randomizer

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRandomizer is a mock of Randomizer interface.
type MockRandomizer struct {
	ctrl     *gomock.Controller
	recorder *MockRandomizerMockRecorder
}

// MockRandomizerMockRecorder is the mock recorder for MockRandomizer.
type MockRandomizerMockRecorder struct {
	mock *MockRandomizer
}

// NewMockRandomizer creates a new mock instance.
func NewMockRandomizer(ctrl *gomock.Controller) *MockRandomizer {
	mock := &MockRandomizer{ctrl: ctrl}
	mock.recorder = &MockRandomizerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRandomizer) EXPECT() *MockRandomizerMockRecorder {
	return m.recorder
}

// Random mocks base method.
func (m *MockRandomizer) Random(length int, col []rune) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Random", length, col)
	ret0, _ := ret[0].(string)
	return ret0
}

// Random indicates an expected call of Random.
func (mr *MockRandomizerMockRecorder) Random(length, col interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Random", reflect.TypeOf((*MockRandomizer)(nil).Random), length, col)
}
