// Code generated by MockGen. DO NOT EDIT.
// Source: ./access.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/vfilipovsky/url-shortener/internal/entity"
)

// MockAccess is a mock of Access interface.
type MockAccess struct {
	ctrl     *gomock.Controller
	recorder *MockAccessMockRecorder
}

// MockAccessMockRecorder is the mock recorder for MockAccess.
type MockAccessMockRecorder struct {
	mock *MockAccess
}

// NewMockAccess creates a new mock instance.
func NewMockAccess(ctrl *gomock.Controller) *MockAccess {
	mock := &MockAccess{ctrl: ctrl}
	mock.recorder = &MockAccessMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccess) EXPECT() *MockAccessMockRecorder {
	return m.recorder
}

// GetByToken mocks base method.
func (m *MockAccess) GetByToken(token string) (*entity.Access, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByToken", token)
	ret0, _ := ret[0].(*entity.Access)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByToken indicates an expected call of GetByToken.
func (mr *MockAccessMockRecorder) GetByToken(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByToken", reflect.TypeOf((*MockAccess)(nil).GetByToken), token)
}
