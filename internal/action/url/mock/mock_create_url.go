// Code generated by MockGen. DO NOT EDIT.
// Source: ./create_url.go

// Package mock_url is a generated GoMock package.
package mock_url

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/vfilipovsky/url-shortener/internal/entity"
)

// MockCreate is a mock of Create interface.
type MockCreate struct {
	ctrl     *gomock.Controller
	recorder *MockCreateMockRecorder
}

// MockCreateMockRecorder is the mock recorder for MockCreate.
type MockCreateMockRecorder struct {
	mock *MockCreate
}

// NewMockCreate creates a new mock instance.
func NewMockCreate(ctrl *gomock.Controller) *MockCreate {
	mock := &MockCreate{ctrl: ctrl}
	mock.recorder = &MockCreateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreate) EXPECT() *MockCreateMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockCreate) Run(accessToken, url string, isSecured bool, aliveUntil time.Time) (*entity.Url, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", accessToken, url, isSecured, aliveUntil)
	ret0, _ := ret[0].(*entity.Url)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Run indicates an expected call of Run.
func (mr *MockCreateMockRecorder) Run(accessToken, url, isSecured, aliveUntil interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockCreate)(nil).Run), accessToken, url, isSecured, aliveUntil)
}
